/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubedb.dev/apimachinery/apis/autoscaling/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PerconaXtraDBAutoscalerLister helps list PerconaXtraDBAutoscalers.
// All objects returned here must be treated as read-only.
type PerconaXtraDBAutoscalerLister interface {
	// List lists all PerconaXtraDBAutoscalers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PerconaXtraDBAutoscaler, err error)
	// PerconaXtraDBAutoscalers returns an object that can list and get PerconaXtraDBAutoscalers.
	PerconaXtraDBAutoscalers(namespace string) PerconaXtraDBAutoscalerNamespaceLister
	PerconaXtraDBAutoscalerListerExpansion
}

// perconaXtraDBAutoscalerLister implements the PerconaXtraDBAutoscalerLister interface.
type perconaXtraDBAutoscalerLister struct {
	indexer cache.Indexer
}

// NewPerconaXtraDBAutoscalerLister returns a new PerconaXtraDBAutoscalerLister.
func NewPerconaXtraDBAutoscalerLister(indexer cache.Indexer) PerconaXtraDBAutoscalerLister {
	return &perconaXtraDBAutoscalerLister{indexer: indexer}
}

// List lists all PerconaXtraDBAutoscalers in the indexer.
func (s *perconaXtraDBAutoscalerLister) List(selector labels.Selector) (ret []*v1alpha1.PerconaXtraDBAutoscaler, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PerconaXtraDBAutoscaler))
	})
	return ret, err
}

// PerconaXtraDBAutoscalers returns an object that can list and get PerconaXtraDBAutoscalers.
func (s *perconaXtraDBAutoscalerLister) PerconaXtraDBAutoscalers(namespace string) PerconaXtraDBAutoscalerNamespaceLister {
	return perconaXtraDBAutoscalerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PerconaXtraDBAutoscalerNamespaceLister helps list and get PerconaXtraDBAutoscalers.
// All objects returned here must be treated as read-only.
type PerconaXtraDBAutoscalerNamespaceLister interface {
	// List lists all PerconaXtraDBAutoscalers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PerconaXtraDBAutoscaler, err error)
	// Get retrieves the PerconaXtraDBAutoscaler from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.PerconaXtraDBAutoscaler, error)
	PerconaXtraDBAutoscalerNamespaceListerExpansion
}

// perconaXtraDBAutoscalerNamespaceLister implements the PerconaXtraDBAutoscalerNamespaceLister
// interface.
type perconaXtraDBAutoscalerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PerconaXtraDBAutoscalers in the indexer for a given namespace.
func (s perconaXtraDBAutoscalerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PerconaXtraDBAutoscaler, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PerconaXtraDBAutoscaler))
	})
	return ret, err
}

// Get retrieves the PerconaXtraDBAutoscaler from the indexer for a given namespace and name.
func (s perconaXtraDBAutoscalerNamespaceLister) Get(name string) (*v1alpha1.PerconaXtraDBAutoscaler, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("perconaxtradbautoscaler"), name)
	}
	return obj.(*v1alpha1.PerconaXtraDBAutoscaler), nil
}
