apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: discovery.k8s.io
    k8s.io/kind: EndpointSlice
    k8s.io/resource: endpointslice
    k8s.io/version: v1
  name: discovery.k8s.io-v1-endpointslice
spec:
  resource:
    group: discovery.k8s.io
    kind: EndpointSlice
    name: endpointslice
    scope: Namespaced
    version: v1
  ui:
    editor:
      name: discoveryk8sio-endpointslice-editor
      url: https://bundles.byte.builders/ui/
      version: v0.2.0
  validation:
    openAPIV3Schema:
      description: EndpointSlice represents a subset of the endpoints that implement
        a service. For a given service there may be multiple EndpointSlice objects,
        selected by labels, which must be joined to produce the full set of endpoints.
      properties:
        addressType:
          description: 'addressType specifies the type of address carried by this
            EndpointSlice. All addresses in this slice must be the same type. This
            field is immutable after creation. The following address types are currently
            supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6
            Address. * FQDN: Represents a Fully Qualified Domain Name.'
          type: string
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        endpoints:
          description: endpoints is a list of unique endpoints in this slice. Each
            slice may include a maximum of 1000 endpoints.
          items:
            description: Endpoint represents a single logical "backend" implementing
              a service.
            properties:
              addresses:
                description: addresses of this endpoint. The contents of this field
                  are interpreted according to the corresponding EndpointSlice addressType
                  field. Consumers must handle different types of addresses in the
                  context of their own capabilities. This must contain at least one
                  address but no more than 100.
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              conditions:
                description: conditions contains information about the current status
                  of the endpoint.
                properties:
                  ready:
                    description: ready indicates that this endpoint is prepared to
                      receive traffic, according to whatever system is managing the
                      endpoint. A nil value indicates an unknown state. In most cases
                      consumers should interpret this unknown state as ready. For
                      compatibility reasons, ready should never be "true" for terminating
                      endpoints.
                    type: boolean
                  serving:
                    description: serving is identical to ready except that it is set
                      regardless of the terminating state of endpoints. This condition
                      should be set to true for a ready endpoint that is terminating.
                      If nil, consumers should defer to the ready condition. This
                      field can be enabled with the EndpointSliceTerminatingCondition
                      feature gate.
                    type: boolean
                  terminating:
                    description: terminating indicates that this endpoint is terminating.
                      A nil value indicates an unknown state. Consumers should interpret
                      this unknown state to mean that the endpoint is not terminating.
                      This field can be enabled with the EndpointSliceTerminatingCondition
                      feature gate.
                    type: boolean
                type: object
              deprecatedTopology:
                additionalProperties:
                  type: string
                description: deprecatedTopology contains topology information part
                  of the v1beta1 API. This field is deprecated, and will be removed
                  when the v1beta1 API is removed (no sooner than kubernetes v1.24).  While
                  this field can hold values, it is not writable through the v1 API,
                  and any attempts to write to it will be silently ignored. Topology
                  information can be found in the zone and nodeName fields instead.
                type: object
              hints:
                description: hints contains information associated with how an endpoint
                  should be consumed.
                properties:
                  forZones:
                    description: forZones indicates the zone(s) this endpoint should
                      be consumed by to enable topology aware routing.
                    items:
                      description: ForZone provides information about which zones
                        should consume this endpoint.
                      properties:
                        name:
                          description: name represents the name of the zone.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              hostname:
                description: hostname of this endpoint. This field may be used by
                  consumers of endpoints to distinguish endpoints from each other
                  (e.g. in DNS names). Multiple endpoints which use the same hostname
                  should be considered fungible (e.g. multiple A values in DNS). Must
                  be lowercase and pass DNS Label (RFC 1123) validation.
                type: string
              nodeName:
                description: nodeName represents the name of the Node hosting this
                  endpoint. This can be used to determine endpoints local to a Node.
                  This field can be enabled with the EndpointSliceNodeName feature
                  gate.
                type: string
              targetRef:
                description: targetRef is a reference to a Kubernetes object that
                  represents this endpoint.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              zone:
                description: zone is the name of the Zone this endpoint exists in.
                type: string
            required:
            - addresses
            type: object
          type: array
          x-kubernetes-list-type: atomic
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        ports:
          description: ports specifies the list of network ports exposed by each endpoint
            in this slice. Each port must have a unique name. When ports is empty,
            it indicates that there are no defined ports. When a port is defined with
            a nil port value, it indicates "all ports". Each slice may include a maximum
            of 100 ports.
          items:
            description: EndpointPort represents a Port used by an EndpointSlice
            properties:
              appProtocol:
                description: The application protocol for this port. This field follows
                  standard Kubernetes label syntax. Un-prefixed names are reserved
                  for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names).
                  Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                type: string
              name:
                description: 'The name of this port. All ports in an EndpointSlice
                  must have a unique name. If the EndpointSlice is dervied from a
                  Kubernetes service, this corresponds to the Service.ports[].name.
                  Name must either be an empty string or pass DNS_LABEL validation:
                  * must be no more than 63 characters long. * must consist of lower
                  case alphanumeric characters or ''-''. * must start and end with
                  an alphanumeric character. Default is empty string.'
                type: string
              port:
                description: The port number of the endpoint. If this is not specified,
                  ports are not restricted and must be interpreted in the context
                  of the specific consumer.
                format: int32
                type: integer
              protocol:
                default: TCP
                description: The IP protocol for this port. Must be UDP, TCP, or SCTP.
                  Default is TCP.
                type: string
            type: object
          type: array
          x-kubernetes-list-type: atomic
      required:
      - addressType
      - endpoints
      type: object
