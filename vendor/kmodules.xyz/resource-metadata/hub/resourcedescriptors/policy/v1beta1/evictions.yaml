apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: policy
    k8s.io/kind: Eviction
    k8s.io/resource: evictions
    k8s.io/version: v1beta1
  name: policy-v1beta1-evictions
spec:
  resource:
    group: policy
    kind: Eviction
    name: evictions
    scope: Namespaced
    version: v1beta1
  ui:
    editor:
      name: policy-eviction-editor
      url: https://bundles.byte.builders/ui/
      version: v0.2.0
  validation:
    openAPIV3Schema:
      description: Eviction evicts a pod from its node subject to certain policies
        and safety constraints. This is a subresource of Pod.  A request to cause
        such an eviction is created by POSTing to .../pods/<pod name>/evictions.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        deleteOptions:
          description: DeleteOptions may be provided
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            dryRun:
              description: 'When present, indicates that modifications should not
                be persisted. An invalid or unrecognized dryRun directive will result
                in an error response and no further processing of the request. Valid
                values are: - All: all dry run stages will be processed'
              items:
                type: string
              type: array
            gracePeriodSeconds:
              description: The duration in seconds before the object should be deleted.
                Value must be non-negative integer. The value zero indicates delete
                immediately. If this value is nil, the default grace period for the
                specified type will be used. Defaults to a per object value if not
                specified. zero means delete immediately.
              format: int64
              type: integer
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            orphanDependents:
              description: 'Deprecated: please use the PropagationPolicy, this field
                will be deprecated in 1.7. Should the dependent objects be orphaned.
                If true/false, the "orphan" finalizer will be added to/removed from
                the object''s finalizers list. Either this field or PropagationPolicy
                may be set, but not both.'
              type: boolean
            preconditions:
              description: Must be fulfilled before a deletion is carried out. If
                not possible, a 409 Conflict status will be returned.
              properties:
                resourceVersion:
                  description: Specifies the target ResourceVersion
                  type: string
                uid:
                  description: Specifies the target UID.
                  type: string
              type: object
            propagationPolicy:
              description: 'Whether and how garbage collection will be performed.
                Either this field or OrphanDependents may be set, but not both. The
                default policy is decided by the existing finalizer set in the metadata.finalizers
                and the resource-specific default policy. Acceptable values are: ''Orphan''
                - orphan the dependents; ''Background'' - allow the garbage collector
                to delete the dependents in the background; ''Foreground'' - a cascading
                policy that deletes all dependents in the foreground.'
              type: string
          type: object
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
      type: object
