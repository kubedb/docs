apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: policy
    k8s.io/kind: PodSecurityPolicy
    k8s.io/resource: podsecuritypolicies
    k8s.io/version: v1beta1
  name: policy-v1beta1-podsecuritypolicies
spec:
  columns:
  - name: Name
    pathTemplate: '{{ jp "{.metadata.name}" . }}'
    priority: 3
    type: string
  - name: Namespace
    pathTemplate: '{{ jp "{.metadata.namespace}" . }}'
    priority: 3
    type: string
  - name: Labels
    pathTemplate: '{{ jp "{.metadata.labels}" . }}'
    priority: 3
    type: object
  - name: Annotations
    pathTemplate: '{{ jp "{.metadata.annotations}" . }}'
    priority: 1
    type: object
  - name: PRIV
    pathTemplate: '{{ jp "{.spec.allowPrivilegeEscalation}" . }}'
    priority: 3
    type: string
  - name: CAPS
    pathTemplate: '{{ jp "{.spec.allowedCapabilities}" . }}'
    priority: 3
    type: string
  - name: SELINUX
    pathTemplate: '{{ jp "{.spec.seLinux.rule}" . }}'
    priority: 3
    type: string
  - name: RUNASUSER
    pathTemplate: '{{ jp "{.spec.runAsUser.rule}" . }}'
    priority: 3
    type: string
  - name: FSGROUP
    pathTemplate: '{{ jp "{.spec.fsGroup.rule}" . }}'
    priority: 3
    type: string
  - name: SUPGROUP
    pathTemplate: '{{ jp "{.spec.supplementalGroups.rule}" . }}'
    priority: 3
    type: string
  - name: READONLYROOTFS
    pathTemplate: '{{ jp "{.spec.readOnlyRootFilesystem}" . }}'
    priority: 3
    type: string
  - name: VOLUMES
    pathTemplate: '{{ jp "{.spec.volumes}" . }}'
    priority: 3
    type: string
  - name: Age
    pathTemplate: '{{ jp "{.metadata.creationTimestamp}" . }}'
    priority: 3
    type: date
  icons:
  - src: https://cdn.appscode.com/k8s/icons/policy/podsecuritypolicies.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/policy/podsecuritypolicies.png
    type: image/png
  resource:
    group: policy
    kind: PodSecurityPolicy
    name: podsecuritypolicies
    scope: Cluster
    version: v1beta1
  resourceRequirements:
  - resources: spec.podTemplate.spec.resources
    units: spec.replicas
  ui:
    editor:
      name: policy-podsecuritypolicy-editor
      url: https://raw.githubusercontent.com/bytebuilders/ui-wizards/master/stable
      version: v0.2.0-alpha.0
  validation:
    openAPIV3Schema:
      description: PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container. Deprecated in 1.21.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: spec defines the policy enforced.
          properties:
            allowPrivilegeEscalation:
              description: allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.
              type: boolean
            allowedCSIDrivers:
              description: AllowedCSIDrivers is an allowlist of inline CSI drivers that must be explicitly set to be embedded within a pod spec. An empty value indicates that any CSI driver can be used for inline ephemeral volumes. This is a beta field, and is only honored if the API server enables the CSIInlineVolume feature gate.
              items:
                description: AllowedCSIDriver represents a single inline CSI Driver that is allowed to be used.
                properties:
                  name:
                    description: Name is the registered name of the CSI driver
                    type: string
                required:
                - name
                type: object
              type: array
            allowedCapabilities:
              description: allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities.
              items:
                description: Capability represent POSIX capabilities type
                type: string
              type: array
            allowedFlexVolumes:
              description: allowedFlexVolumes is an allowlist of Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the "volumes" field.
              items:
                description: AllowedFlexVolume represents a single Flexvolume that is allowed to be used.
                properties:
                  driver:
                    description: driver is the name of the Flexvolume driver.
                    type: string
                required:
                - driver
                type: object
              type: array
            allowedHostPaths:
              description: allowedHostPaths is an allowlist of host paths. Empty indicates that all host paths may be used.
              items:
                description: AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined.
                properties:
                  pathPrefix:
                    description: "pathPrefix is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path. \n Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`"
                    type: string
                  readOnly:
                    description: when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly.
                    type: boolean
                type: object
              type: array
            allowedProcMountTypes:
              description: AllowedProcMountTypes is an allowlist of allowed ProcMountTypes. Empty or nil indicates that only the DefaultProcMountType may be used. This requires the ProcMountType feature flag to be enabled.
              items:
                type: string
              type: array
            allowedUnsafeSysctls:
              description: "allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \"*\" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to allowlist all allowed unsafe sysctls explicitly to avoid rejection. \n Examples: e.g. \"foo/*\" allows \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" allows \"foo.bar\", \"foo.baz\", etc."
              items:
                type: string
              type: array
            defaultAddCapabilities:
              description: defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list.
              items:
                description: Capability represent POSIX capabilities type
                type: string
              type: array
            defaultAllowPrivilegeEscalation:
              description: defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.
              type: boolean
            forbiddenSysctls:
              description: "forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \"*\" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden. \n Examples: e.g. \"foo/*\" forbids \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" forbids \"foo.bar\", \"foo.baz\", etc."
              items:
                type: string
              type: array
            fsGroup:
              description: fsGroup is the strategy that will dictate what fs group is used by the SecurityContext.
              properties:
                ranges:
                  description: ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs.
                  items:
                    description: IDRange provides a min/max of an allowed range of IDs.
                    properties:
                      max:
                        description: max is the end of the range, inclusive.
                        format: int64
                        type: integer
                      min:
                        description: min is the start of the range, inclusive.
                        format: int64
                        type: integer
                    required:
                    - max
                    - min
                    type: object
                  type: array
                rule:
                  description: rule is the strategy that will dictate what FSGroup is used in the SecurityContext.
                  type: string
              type: object
            hostIPC:
              description: hostIPC determines if the policy allows the use of HostIPC in the pod spec.
              type: boolean
            hostNetwork:
              description: hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
              type: boolean
            hostPID:
              description: hostPID determines if the policy allows the use of HostPID in the pod spec.
              type: boolean
            hostPorts:
              description: hostPorts determines which host port ranges are allowed to be exposed.
              items:
                description: HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined.
                properties:
                  max:
                    description: max is the end of the range, inclusive.
                    format: int32
                    type: integer
                  min:
                    description: min is the start of the range, inclusive.
                    format: int32
                    type: integer
                required:
                - max
                - min
                type: object
              type: array
            privileged:
              description: privileged determines if a pod can request to be run as privileged.
              type: boolean
            readOnlyRootFilesystem:
              description: readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
              type: boolean
            requiredDropCapabilities:
              description: requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
              items:
                description: Capability represent POSIX capabilities type
                type: string
              type: array
            runAsGroup:
              description: RunAsGroup is the strategy that will dictate the allowable RunAsGroup values that may be set. If this field is omitted, the pod's RunAsGroup can take any value. This field requires the RunAsGroup feature gate to be enabled.
              properties:
                ranges:
                  description: ranges are the allowed ranges of gids that may be used. If you would like to force a single gid then supply a single range with the same start and end. Required for MustRunAs.
                  items:
                    description: IDRange provides a min/max of an allowed range of IDs.
                    properties:
                      max:
                        description: max is the end of the range, inclusive.
                        format: int64
                        type: integer
                      min:
                        description: min is the start of the range, inclusive.
                        format: int64
                        type: integer
                    required:
                    - max
                    - min
                    type: object
                  type: array
                rule:
                  description: rule is the strategy that will dictate the allowable RunAsGroup values that may be set.
                  type: string
              required:
              - rule
              type: object
            runAsUser:
              description: runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set.
              properties:
                ranges:
                  description: ranges are the allowed ranges of uids that may be used. If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs.
                  items:
                    description: IDRange provides a min/max of an allowed range of IDs.
                    properties:
                      max:
                        description: max is the end of the range, inclusive.
                        format: int64
                        type: integer
                      min:
                        description: min is the start of the range, inclusive.
                        format: int64
                        type: integer
                    required:
                    - max
                    - min
                    type: object
                  type: array
                rule:
                  description: rule is the strategy that will dictate the allowable RunAsUser values that may be set.
                  type: string
              required:
              - rule
              type: object
            runtimeClass:
              description: runtimeClass is the strategy that will dictate the allowable RuntimeClasses for a pod. If this field is omitted, the pod's runtimeClassName field is unrestricted. Enforcement of this field depends on the RuntimeClass feature gate being enabled.
              properties:
                allowedRuntimeClassNames:
                  description: allowedRuntimeClassNames is an allowlist of RuntimeClass names that may be specified on a pod. A value of "*" means that any RuntimeClass name is allowed, and must be the only item in the list. An empty list requires the RuntimeClassName field to be unset.
                  items:
                    type: string
                  type: array
                defaultRuntimeClassName:
                  description: defaultRuntimeClassName is the default RuntimeClassName to set on the pod. The default MUST be allowed by the allowedRuntimeClassNames list. A value of nil does not mutate the Pod.
                  type: string
              required:
              - allowedRuntimeClassNames
              type: object
            seLinux:
              description: seLinux is the strategy that will dictate the allowable labels that may be set.
              properties:
                rule:
                  description: rule is the strategy that will dictate the allowable labels that may be set.
                  type: string
                seLinuxOptions:
                  description: 'seLinuxOptions required to run as; required for MustRunAs More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                  properties:
                    level:
                      description: Level is SELinux level label that applies to the container.
                      type: string
                    role:
                      description: Role is a SELinux role label that applies to the container.
                      type: string
                    type:
                      description: Type is a SELinux type label that applies to the container.
                      type: string
                    user:
                      description: User is a SELinux user label that applies to the container.
                      type: string
                  type: object
              required:
              - rule
              type: object
            supplementalGroups:
              description: supplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.
              properties:
                ranges:
                  description: ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs.
                  items:
                    description: IDRange provides a min/max of an allowed range of IDs.
                    properties:
                      max:
                        description: max is the end of the range, inclusive.
                        format: int64
                        type: integer
                      min:
                        description: min is the start of the range, inclusive.
                        format: int64
                        type: integer
                    required:
                    - max
                    - min
                    type: object
                  type: array
                rule:
                  description: rule is the strategy that will dictate what supplemental groups is used in the SecurityContext.
                  type: string
              type: object
            volumes:
              description: volumes is an allowlist of volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use '*'.
              items:
                description: FSType gives strong typing to different file systems that are used by volumes.
                type: string
              type: array
          required:
          - fsGroup
          - runAsUser
          - seLinux
          - supplementalGroups
          type: object
      type: object
