apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: policy.kubevault.com
    k8s.io/kind: VaultPolicyBinding
    k8s.io/resource: vaultpolicybindings
    k8s.io/version: v1alpha1
  name: policy.kubevault.com-v1alpha1-vaultpolicybindings
spec:
  icons:
  - src: https://cdn.appscode.com/k8s/icons/policy.kubevault.com/vaultpolicybindings.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/policy.kubevault.com/vaultpolicybindings.png
    type: image/png
  resource:
    group: policy.kubevault.com
    kind: VaultPolicyBinding
    name: vaultpolicybindings
    scope: Namespaced
    version: v1alpha1
  ui:
    editor:
      name: policykubevaultcom-vaultpolicybinding-editor
      url: https://raw.githubusercontent.com/bytebuilders/ui-wizards/master/stable
      version: v0.1.0
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: 'links: https://www.vaultproject.io/api/auth/kubernetes/index.html#parameters-1'
          properties:
            policies:
              description: Policies is a list of Vault policy identifiers.
              items:
                properties:
                  name:
                    description: 'Name is a Vault server policy name. This name should be returned by `vault read sys/policy` command. More info: https://www.vaultproject.io/docs/concepts/policies.html#listing-policies'
                    type: string
                  ref:
                    description: 'Ref is name of a VaultPolicy crd object. Actual vault policy name is spec.vaultRoleName field. More info: https://www.vaultproject.io/docs/concepts/policies.html#listing-policies'
                    type: string
                type: object
              type: array
            subjectRef:
              description: SubjectRef refers to Vault users who will be granted policies.
              properties:
                kubernetes:
                  description: 'Kubernetes refers to Vault users who are authenticated via Kubernetes auth method More info: https://www.vaultproject.io/docs/auth/kubernetes.html#configuration'
                  properties:
                    maxTTL:
                      description: Specifies the maximum allowed lifetime of tokens issued in seconds using this role.
                      type: string
                    path:
                      description: 'Specifies the path where kubernetes auth is enabled default : kubernetes'
                      type: string
                    period:
                      description: If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.
                      type: string
                    serviceAccountNames:
                      description: Specifies the names of the service account to bind with policy
                      items:
                        type: string
                      type: array
                    serviceAccountNamespaces:
                      description: Specifies the namespaces of the service account
                      items:
                        type: string
                      type: array
                    ttl:
                      description: Specifies the TTL period of tokens issued using this role in seconds.
                      type: string
                  required:
                  - serviceAccountNames
                  - serviceAccountNamespaces
                  type: object
              type: object
            vaultRef:
              description: VaultRef is the name of a AppBinding referencing to a Vault Server
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            vaultRoleName:
              description: 'VaultRoleName is the role name which will be bound of the policies This defaults to following format: k8s.${cluster}.${metadata.namespace}.${metadata.name} xref: https://www.vaultproject.io/api/auth/kubernetes/index.html#create-role'
              type: string
          required:
          - policies
          - subjectRef
          - vaultRef
          type: object
      type: object
