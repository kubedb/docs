apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: certificates.k8s.io
    k8s.io/kind: CertificateSigningRequest
    k8s.io/resource: certificatesigningrequests
    k8s.io/version: v1
  name: certificates.k8s.io-v1-certificatesigningrequests
spec:
  icons:
  - src: https://cdn.appscode.com/k8s/icons/certificates.k8s.io/certificatesigningrequests.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/certificates.k8s.io/certificatesigningrequests.png
    type: image/png
  resource:
    group: certificates.k8s.io
    kind: CertificateSigningRequest
    name: certificatesigningrequests
    scope: Namespaced
    version: v1
  resourceRequirements:
  - resources: spec.podTemplate.spec.resources
    units: spec.replicas
  validation:
    openAPIV3Schema:
      description: "CertificateSigningRequest objects provide a mechanism to obtain x509 certificates by submitting a certificate signing request, and having it asynchronously approved and issued. \n Kubelets use this API to obtain:  1. client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client-kubelet\" signerName).  2. serving certificates for TLS endpoints kube-apiserver can connect to securely (with the \"kubernetes.io/kubelet-serving\" signerName). \n This API can be used to request client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client\" signerName), or to obtain certificates from custom non-Kubernetes signers."
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: spec contains the certificate request, and is immutable after creation. Only the request, signerName, and usages fields can be set on creation. Other fields are derived by Kubernetes and cannot be modified by users.
          properties:
            extra:
              additionalProperties:
                description: ExtraValue masks the value so protobuf can generate
                items:
                  type: string
                type: array
              description: extra contains extra attributes of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.
              type: object
            groups:
              description: groups contains group membership of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.
              items:
                type: string
              type: array
              x-kubernetes-list-type: atomic
            request:
              description: request contains an x509 certificate signing request encoded in a "CERTIFICATE REQUEST" PEM block. When serialized as JSON or YAML, the data is additionally base64-encoded.
              format: byte
              type: string
            signerName:
              description: "signerName indicates the requested signer, and is a qualified name. \n List/watch requests for CertificateSigningRequests can filter on this field using a \"spec.signerName=NAME\" fieldSelector. \n Well-known Kubernetes signers are:  1. \"kubernetes.io/kube-apiserver-client\": issues client certificates that can be used to authenticate to kube-apiserver.   Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the \"csrsigning\" controller in kube-controller-manager.  2. \"kubernetes.io/kube-apiserver-client-kubelet\": issues client certificates that kubelets use to authenticate to kube-apiserver.   Requests for this signer can be auto-approved by the \"csrapproving\" controller in kube-controller-manager, and can be issued by the \"csrsigning\" controller in kube-controller-manager.  3. \"kubernetes.io/kubelet-serving\" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.   Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the \"csrsigning\" controller in kube-controller-manager. \n More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers \n Custom signerNames can also be specified. The signer defines:  1. Trust distribution: how trust (CA bundles) are distributed.  2. Permitted subjects: and behavior when a disallowed subject is requested.  3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.  4. Required, permitted, or forbidden key usages / extended key usages.  5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.  6. Whether or not requests for CA certificates are allowed."
              type: string
            uid:
              description: uid contains the uid of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.
              type: string
            usages:
              description: "usages specifies a set of key usages requested in the issued certificate. \n Requests for TLS client certificates typically request: \"digital signature\", \"key encipherment\", \"client auth\". \n Requests for TLS serving certificates typically request: \"key encipherment\", \"digital signature\", \"server auth\". \n Valid values are:  \"signing\", \"digital signature\", \"content commitment\",  \"key encipherment\", \"key agreement\", \"data encipherment\",  \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\",  \"server auth\", \"client auth\",  \"code signing\", \"email protection\", \"s/mime\",  \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\",  \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\""
              items:
                description: 'KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12'
                type: string
              type: array
              x-kubernetes-list-type: atomic
            username:
              description: username contains the name of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.
              type: string
          required:
          - request
          - signerName
          type: object
      required:
      - spec
      type: object
