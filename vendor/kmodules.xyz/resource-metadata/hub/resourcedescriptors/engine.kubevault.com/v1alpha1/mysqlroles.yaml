apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: engine.kubevault.com
    k8s.io/kind: MySQLRole
    k8s.io/resource: mysqlroles
    k8s.io/version: v1alpha1
  name: engine.kubevault.com-v1alpha1-mysqlroles
spec:
  icons:
  - src: https://cdn.appscode.com/k8s/icons/engine.kubevault.com/mysqlroles.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/engine.kubevault.com/mysqlroles.png
    type: image/png
  resource:
    group: engine.kubevault.com
    kind: MySQLRole
    name: mysqlroles
    scope: Namespaced
    version: v1alpha1
  ui:
    editor:
      name: enginekubevaultcom-mysqlrole-editor
      url: https://raw.githubusercontent.com/bytebuilders/ui-wizards/master/stable
      version: v0.1.0
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: MySQLRoleSpec contains connection information, mysql role info etc
          properties:
            creationStatements:
              description: https://www.vaultproject.io/api/secret/databases/mysql-maria.html#creation_statements Specifies the database statements executed to create and configure a user.
              items:
                type: string
              type: array
            databaseName:
              description: Specifies the database name under which the role will be created
              type: string
            databaseRef:
              description: DatabaseRef specifies the database appbinding reference in any namespace.
              properties:
                name:
                  description: '`name` is the name of the app. Required'
                  type: string
                namespace:
                  description: '`namespace` is the namespace of the app. Required'
                  type: string
                parameters:
                  description: "Parameters is a set of the parameters to be used to override default parameters. The inline YAML/JSON payload to be translated into equivalent JSON object. \n The Parameters field is NOT secret or secured in any way and should NEVER be used to hold sensitive information."
                  type: object
                  x-kubernetes-embedded-resource: true
                  x-kubernetes-preserve-unknown-fields: true
              required:
              - name
              - namespace
              type: object
            defaultTTL:
              description: Specifies the TTL for the leases associated with this role. Accepts time suffixed strings ("1h") or an integer number of seconds. Defaults to system/engine default TTL time
              type: string
            maxTTL:
              description: Specifies the maximum TTL for the leases associated with this role. Accepts time suffixed strings ("1h") or an integer number of seconds. Defaults to system/engine default TTL time.
              type: string
            path:
              description: Specifies the path where secret engine is enabled
              type: string
            revocationStatements:
              description: https://www.vaultproject.io/api/secret/databases/mysql-maria.html#revocation_statements Specifies the database statements to be executed to revoke a user.
              items:
                type: string
              type: array
            vaultRef:
              description: VaultRef is the name of a AppBinding referencing to a Vault Server
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
          required:
          - creationStatements
          - vaultRef
          type: object
      type: object
