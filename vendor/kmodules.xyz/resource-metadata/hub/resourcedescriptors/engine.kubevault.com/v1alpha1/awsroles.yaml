apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: engine.kubevault.com
    k8s.io/kind: AWSRole
    k8s.io/resource: awsroles
    k8s.io/version: v1alpha1
  name: engine.kubevault.com-v1alpha1-awsroles
spec:
  icons:
  - src: https://cdn.appscode.com/k8s/icons/engine.kubevault.com/awsroles.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/engine.kubevault.com/awsroles.png
    type: image/png
  resource:
    group: engine.kubevault.com
    kind: AWSRole
    name: awsroles
    scope: Namespaced
    version: v1alpha1
  ui:
    editor:
      name: enginekubevaultcom-awsrole-editor
      url: https://bundles.byte.builders/ui/
      version: v0.2.0
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: 'AWSRoleSpec contains connection information, AWS role info,
            etc More info: https://www.vaultproject.io/api/secret/aws/index.html#parameters-3'
          properties:
            credentialType:
              description: Specifies the type of credential to be used when retrieving
                credentials from the role
              enum:
              - iam_user
              - assumed_role
              - federation_token
              type: string
            defaultSTSTTL:
              description: The default TTL for STS credentials. When a TTL is not
                specified when STS credentials are requested, and a default TTL is
                specified on the role, then this default TTL will be used. Valid only
                when credential_type is one of assumed_role or federation_token
              type: string
            maxSTSTTL:
              description: The max allowed TTL for STS credentials (credentials TTL
                are capped to max_sts_ttl). Valid only when credential_type is one
                of assumed_role or federation_token
              type: string
            policy:
              description: Specifies the IAM policy in JSON format.
              type: object
              x-kubernetes-embedded-resource: true
              x-kubernetes-preserve-unknown-fields: true
            policyARNs:
              description: Specifies the ARNs of the AWS managed policies to be attached
                to IAM users when they are requested. Valid only when credential_type
                is iam_user. When credential_type is iam_user, at least one of policy_arns
                or policy_document must be specified.
              items:
                type: string
              type: array
            policyDocument:
              description: The IAM policy document for the role. The behavior depends
                on the credential type. With iam_user, the policy document will be
                attached to the IAM user generated and augment the permissions the
                IAM user has. With assumed_role and federation_token, the policy document
                will act as a filter on what the credentials can do.
              type: string
            roleARNs:
              description: Specifies the ARNs of the AWS roles this Vault role is
                allowed to assume. Required when credential_type is assumed_role and
                prohibited otherwise
              items:
                type: string
              type: array
            secretEngineRef:
              description: SecretEngineRef is the name of a Secret Engine
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
          required:
          - credentialType
          - secretEngineRef
          type: object
      type: object
