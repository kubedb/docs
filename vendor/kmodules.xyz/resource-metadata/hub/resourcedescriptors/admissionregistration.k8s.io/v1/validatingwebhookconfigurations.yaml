apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: admissionregistration.k8s.io
    k8s.io/kind: ValidatingWebhookConfiguration
    k8s.io/resource: validatingwebhookconfigurations
    k8s.io/version: v1
  name: admissionregistration.k8s.io-v1-validatingwebhookconfigurations
spec:
  icons:
  - src: https://cdn.appscode.com/k8s/icons/admissionregistration.k8s.io/validatingwebhookconfigurations.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/admissionregistration.k8s.io/validatingwebhookconfigurations.png
    type: image/png
  resource:
    group: admissionregistration.k8s.io
    kind: ValidatingWebhookConfiguration
    name: validatingwebhookconfigurations
    scope: Cluster
    version: v1
  ui:
    editor:
      name: admissionregistrationk8sio-validatingwebhookconfiguration-editor
      url: https://bundles.byte.builders/ui/
      version: v0.2.0
  validation:
    openAPIV3Schema:
      description: ValidatingWebhookConfiguration describes the configuration of and
        admission webhook that accept or reject and object without changing it.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        webhooks:
          description: Webhooks is a list of webhooks and the affected resources and
            operations.
          items:
            description: ValidatingWebhook describes an admission webhook and the
              resources and operations it applies to.
            properties:
              admissionReviewVersions:
                description: AdmissionReviewVersions is an ordered list of preferred
                  `AdmissionReview` versions the Webhook expects. API server will
                  try to use first version in the list which it supports. If none
                  of the versions specified in this list supported by API server,
                  validation will fail for this object. If a persisted webhook configuration
                  specifies allowed versions and does not include any versions known
                  to the API Server, calls to the webhook will fail and be subject
                  to the failure policy.
                items:
                  type: string
                type: array
              clientConfig:
                description: ClientConfig defines how to communicate with the hook.
                  Required
                properties:
                  caBundle:
                    description: '`caBundle` is a PEM encoded CA bundle which will
                      be used to validate the webhook''s server certificate. If unspecified,
                      system trust roots on the apiserver are used.'
                    format: byte
                    type: string
                  service:
                    description: "`service` is a reference to the service for this
                      webhook. Either `service` or `url` must be specified. \n If
                      the webhook is running within the cluster, then you should use
                      `service`."
                    properties:
                      name:
                        description: '`name` is the name of the service. Required'
                        type: string
                      namespace:
                        description: '`namespace` is the namespace of the service.
                          Required'
                        type: string
                      path:
                        description: '`path` is an optional URL path which will be
                          sent in any request to this service.'
                        type: string
                      port:
                        description: If specified, the port on the service that hosting
                          webhook. Default to 443 for backward compatibility. `port`
                          should be a valid port number (1-65535, inclusive).
                        format: int32
                        type: integer
                    required:
                    - name
                    - namespace
                    type: object
                  url:
                    description: "`url` gives the location of the webhook, in standard
                      URL form (`scheme://host:port/path`). Exactly one of `url` or
                      `service` must be specified. \n The `host` should not refer
                      to a service running in the cluster; use the `service` field
                      instead. The host might be resolved via external DNS in some
                      apiservers (e.g., `kube-apiserver` cannot resolve in-cluster
                      DNS as that would be a layering violation). `host` may also
                      be an IP address. \n Please note that using `localhost` or `127.0.0.1`
                      as a `host` is risky unless you take great care to run this
                      webhook on all hosts which run an apiserver which might need
                      to make calls to this webhook. Such installs are likely to be
                      non-portable, i.e., not easy to turn up in a new cluster. \n
                      The scheme must be \"https\"; the URL must begin with \"https://\".
                      \n A path is optional, and if present may be any string permissible
                      in a URL. You may use the path to pass an arbitrary string to
                      the webhook, for example, a cluster identifier. \n Attempting
                      to use a user or basic auth e.g. \"user:password@\" is not allowed.
                      Fragments (\"#...\") and query parameters (\"?...\") are not
                      allowed, either."
                    type: string
                type: object
              failurePolicy:
                description: FailurePolicy defines how unrecognized errors from the
                  admission endpoint are handled - allowed values are Ignore or Fail.
                  Defaults to Fail.
                type: string
              matchPolicy:
                description: "matchPolicy defines how the \"rules\" list is used to
                  match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".
                  \n - Exact: match a request only if it exactly matches a specified
                  rule. For example, if deployments can be modified via apps/v1, apps/v1beta1,
                  and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"],
                  apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to
                  apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.
                  \n - Equivalent: match a request if modifies a resource listed in
                  rules, even via another API group or version. For example, if deployments
                  can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1,
                  and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"],
                  resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1
                  would be converted to apps/v1 and sent to the webhook. \n Defaults
                  to \"Equivalent\""
                type: string
              name:
                description: The name of the admission webhook. Name should be fully
                  qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy"
                  is the name of the webhook, and kubernetes.io is the name of the
                  organization. Required.
                type: string
              namespaceSelector:
                description: "NamespaceSelector decides whether to run the webhook
                  on an object based on whether the namespace for that object matches
                  the selector. If the object itself is a namespace, the matching
                  is performed on object.metadata.labels. If the object is another
                  cluster scoped resource, it never skips the webhook. \n For example,
                  to run the webhook on any objects whose namespace is not associated
                  with \"runlevel\" of \"0\" or \"1\";  you will set the selector
                  as follows: \"namespaceSelector\": {   \"matchExpressions\": [     {
                  \      \"key\": \"runlevel\",       \"operator\": \"NotIn\",       \"values\":
                  [         \"0\",         \"1\"       ]     }   ] } \n If instead
                  you want to only run the webhook on any objects whose namespace
                  is associated with the \"environment\" of \"prod\" or \"staging\";
                  you will set the selector as follows: \"namespaceSelector\": {   \"matchExpressions\":
                  [     {       \"key\": \"environment\",       \"operator\": \"In\",
                  \      \"values\": [         \"prod\",         \"staging\"       ]
                  \    }   ] } \n See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                  for more examples of label selectors. \n Default to the empty LabelSelector,
                  which matches everything."
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              objectSelector:
                description: ObjectSelector decides whether to run the webhook based
                  on if the object has matching labels. objectSelector is evaluated
                  against both the oldObject and newObject that would be sent to the
                  webhook, and is considered to match if either object matches the
                  selector. A null object (oldObject in the case of create, or newObject
                  in the case of delete) or an object that cannot have labels (like
                  a DeploymentRollback or a PodProxyOptions object) is not considered
                  to match. Use the object selector only if the webhook is opt-in,
                  because end users may skip the admission webhook by setting the
                  labels. Default to the empty LabelSelector, which matches everything.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              rules:
                description: Rules describes what operations on what resources/subresources
                  the webhook cares about. The webhook cares about an operation if
                  it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks
                  and MutatingAdmissionWebhooks from putting the cluster in a state
                  which cannot be recovered from without completely disabling the
                  plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks
                  are never called on admission requests for ValidatingWebhookConfiguration
                  and MutatingWebhookConfiguration objects.
                items:
                  description: RuleWithOperations is a tuple of Operations and Resources.
                    It is recommended to make sure that all the tuple expansions are
                    valid.
                  properties:
                    apiGroups:
                      description: APIGroups is the API groups the resources belong
                        to. '*' is all groups. If '*' is present, the length of the
                        slice must be one. Required.
                      items:
                        type: string
                      type: array
                    apiVersions:
                      description: APIVersions is the API versions the resources belong
                        to. '*' is all versions. If '*' is present, the length of
                        the slice must be one. Required.
                      items:
                        type: string
                      type: array
                    operations:
                      description: Operations is the operations the admission hook
                        cares about - CREATE, UPDATE, DELETE, CONNECT or * for all
                        of those operations and any future admission operations that
                        are added. If '*' is present, the length of the slice must
                        be one. Required.
                      items:
                        description: OperationType specifies an operation for a request.
                        type: string
                      type: array
                    resources:
                      description: "Resources is a list of resources this rule applies
                        to. \n For example: 'pods' means pods. 'pods/log' means the
                        log subresource of pods. '*' means all resources, but not
                        subresources. 'pods/*' means all subresources of pods. '*/scale'
                        means all scale subresources. '*/*' means all resources and
                        their subresources. \n If wildcard is present, the validation
                        rule will ensure resources do not overlap with each other.
                        \n Depending on the enclosing object, subresources might not
                        be allowed. Required."
                      items:
                        type: string
                      type: array
                    scope:
                      description: scope specifies the scope of this rule. Valid values
                        are "Cluster", "Namespaced", and "*" "Cluster" means that
                        only cluster-scoped resources will match this rule. Namespace
                        API objects are cluster-scoped. "Namespaced" means that only
                        namespaced resources will match this rule. "*" means that
                        there are no scope restrictions. Subresources match the scope
                        of their parent resource. Default is "*".
                      type: string
                  type: object
                type: array
              sideEffects:
                description: 'SideEffects states whether this webhook has side effects.
                  Acceptable values are: None, NoneOnDryRun (webhooks created via
                  v1beta1 may also specify Some or Unknown). Webhooks with side effects
                  MUST implement a reconciliation system, since a request may be rejected
                  by a future step in the admission chain and the side effects therefore
                  need to be undone. Requests with the dryRun attribute will be auto-rejected
                  if they match a webhook with sideEffects == Unknown or Some.'
                type: string
              timeoutSeconds:
                description: TimeoutSeconds specifies the timeout for this webhook.
                  After the timeout passes, the webhook call will be ignored or the
                  API call will fail based on the failure policy. The timeout value
                  must be between 1 and 30 seconds. Default to 10 seconds.
                format: int32
                type: integer
            required:
            - admissionReviewVersions
            - clientConfig
            - name
            - sideEffects
            type: object
          type: array
      type: object
