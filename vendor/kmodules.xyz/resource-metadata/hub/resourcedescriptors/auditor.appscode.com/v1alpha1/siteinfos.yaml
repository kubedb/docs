apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: auditor.appscode.com
    k8s.io/kind: SiteInfo
    k8s.io/resource: siteinfos
    k8s.io/version: v1alpha1
  name: auditor.appscode.com-v1alpha1-siteinfos
spec:
  resource:
    group: auditor.appscode.com
    kind: SiteInfo
    name: siteinfos
    scope: Cluster
    version: v1alpha1
  ui:
    editor:
      name: auditorappscodecom-siteinfo-editor
      url: https://raw.githubusercontent.com/bytebuilders/ui-wizards/master/stable
      version: v0.1.0
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        kubernetes:
          properties:
            clusterName:
              description: https://github.com/kmodules/client-go/blob/master/tools/clusterid/lib.go
              type: string
            clusterUID:
              type: string
            controlPlane:
              description: https://github.com/kmodules/client-go/blob/kubernetes-1.16.3/tools/analytics/analytics.go#L66
              properties:
                dnsNames:
                  items:
                    type: string
                  type: array
                emailAddresses:
                  items:
                    type: string
                  type: array
                ipAddresses:
                  items:
                    type: string
                  type: array
                notAfter:
                  format: date-time
                  type: string
                notBefore:
                  format: date-time
                  type: string
                uris:
                  items:
                    type: string
                  type: array
              required:
              - notAfter
              - notBefore
              type: object
            nodeStats:
              properties:
                allocatable:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: Allocatable represents the resources of a node that
                    are available for scheduling. Defaults to Capacity.
                  type: object
                capacity:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Capacity represents the total resources of a node.
                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity'
                  type: object
                count:
                  type: integer
              type: object
            version:
              description: 'Info contains versioning information. TODO: Add []string
                of api versions supported? It''s still unclear how we''ll want to
                distribute that information.'
              properties:
                buildDate:
                  type: string
                compiler:
                  type: string
                gitCommit:
                  type: string
                gitTreeState:
                  type: string
                gitVersion:
                  type: string
                goVersion:
                  type: string
                major:
                  type: string
                minor:
                  type: string
                platform:
                  type: string
              required:
              - buildDate
              - compiler
              - gitCommit
              - gitTreeState
              - gitVersion
              - goVersion
              - major
              - minor
              - platform
              type: object
          required:
          - nodeStats
          type: object
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        product:
          properties:
            licenseID:
              type: string
            productName:
              description: This has been renamed to Features
              type: string
            productOwnerName:
              type: string
            productOwnerUID:
              type: string
            productUID:
              type: string
            version:
              properties:
                commitHash:
                  type: string
                commitTimestamp:
                  type: string
                compiler:
                  type: string
                gitBranch:
                  type: string
                gitTag:
                  type: string
                goVersion:
                  type: string
                platform:
                  type: string
                version:
                  type: string
                versionStrategy:
                  type: string
              type: object
          required:
          - version
          type: object
      required:
      - kubernetes
      type: object
