apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: auditregistration.k8s.io
    k8s.io/kind: AuditSink
    k8s.io/resource: auditsinks
    k8s.io/version: v1alpha1
  name: auditregistration.k8s.io-v1alpha1-auditsinks
spec:
  resource:
    group: auditregistration.k8s.io
    kind: AuditSink
    name: auditsinks
    scope: Namespaced
    version: v1alpha1
  resourceRequirements:
  - resources: spec.podTemplate.spec.resources
    units: spec.replicas
  ui:
    editor:
      name: auditregistrationk8sio-auditsink-editor
      url: https://raw.githubusercontent.com/bytebuilders/ui-wizards/master/stable
      version: v0.2.0-alpha.0
  validation:
    openAPIV3Schema:
      description: AuditSink represents a cluster level audit sink
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: Spec defines the audit configuration spec
          properties:
            policy:
              description: Policy defines the policy for selecting which events should be sent to the webhook required
              properties:
                level:
                  description: 'The Level that all requests are recorded at. available options: None, Metadata, Request, RequestResponse required'
                  type: string
                stages:
                  description: Stages is a list of stages for which events are created.
                  items:
                    description: Stage defines the stages in request handling during which audit events may be generated.
                    type: string
                  type: array
              required:
              - level
              type: object
            webhook:
              description: Webhook to send events required
              properties:
                clientConfig:
                  description: ClientConfig holds the connection parameters for the webhook required
                  properties:
                    caBundle:
                      description: '`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook''s server certificate. If unspecified, system trust roots on the apiserver are used.'
                      format: byte
                      type: string
                    service:
                      description: "`service` is a reference to the service for this webhook. Either `service` or `url` must be specified. \n If the webhook is running within the cluster, then you should use `service`."
                      properties:
                        name:
                          description: '`name` is the name of the service. Required'
                          type: string
                        namespace:
                          description: '`namespace` is the namespace of the service. Required'
                          type: string
                        path:
                          description: '`path` is an optional URL path which will be sent in any request to this service.'
                          type: string
                        port:
                          description: If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).
                          format: int32
                          type: integer
                      required:
                      - name
                      - namespace
                      type: object
                    url:
                      description: "`url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified. \n The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address. \n Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster. \n The scheme must be \"https\"; the URL must begin with \"https://\". \n A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier. \n Attempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either."
                      type: string
                  type: object
                throttle:
                  description: Throttle holds the options for throttling the webhook
                  properties:
                    burst:
                      description: ThrottleBurst is the maximum number of events sent at the same moment default 15 QPS
                      format: int64
                      type: integer
                    qps:
                      description: ThrottleQPS maximum number of batches per second default 10 QPS
                      format: int64
                      type: integer
                  type: object
              required:
              - clientConfig
              type: object
          required:
          - policy
          - webhook
          type: object
      type: object
