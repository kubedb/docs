apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: appcatalog.appscode.com
    k8s.io/kind: AppBinding
    k8s.io/resource: appbindings
    k8s.io/version: v1alpha1
  name: appcatalog.appscode.com-v1alpha1-appbindings
spec:
  columns:
  - name: Name
    pathTemplate: '{{ jp "{.metadata.name}" . }}'
    priority: 3
    type: string
  - name: Namespace
    pathTemplate: '{{ jp "{.metadata.namespace}" . }}'
    priority: 3
    type: string
  - name: Labels
    pathTemplate: '{{ jp "{.metadata.labels}" . }}'
    priority: 3
    type: object
  - name: Annotations
    pathTemplate: '{{ jp "{.metadata.annotations}" . }}'
    priority: 1
    type: object
  - name: Type
    pathTemplate: '{{ jp "{.spec.type}" . }}'
    priority: 3
    type: string
  - name: Version
    pathTemplate: '{{ jp "{.spec.version}" . }}'
    priority: 3
    type: string
  - name: Service
    pathTemplate: '{{ jp "{.spec.clientConfig.service.name}" . }}'
    priority: 3
    type: string
  - name: Secret
    pathTemplate: '{{ jp "{.spec.secret.name}" . }}'
    priority: 3
    type: string
  - name: Backup Task
    pathTemplate: '{{ jp "{.spec.parameters.stash.addon.backupTask.name }" . }}'
    priority: 1
    type: string
  - name: Restore Task
    pathTemplate: '{{ jp "{.spec.parameters.stash.addon.restoreTask.name }" . }}'
    priority: 1
    type: string
  - name: Age
    pathTemplate: '{{ jp "{.metadata.creationTimestamp}" . }}'
    priority: 3
    type: date
  connections:
  - namespacePath: metadata.namespace
    references:
    - '{.spec.clientConfig.service.name}'
    target:
      apiVersion: v1
      kind: Service
    type: MatchRef
  - namespacePath: metadata.namespace
    references:
    - '{.spec.clientConfig.secret.name}'
    target:
      apiVersion: v1
      kind: Secret
    type: MatchRef
  icons:
  - src: https://cdn.appscode.com/k8s/icons/appcatalog.appscode.com/appbindings.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/appcatalog.appscode.com/appbindings.png
    type: image/png
  resource:
    group: appcatalog.appscode.com
    kind: AppBinding
    name: appbindings
    scope: Namespaced
    version: v1alpha1
  resourceRequirements:
  - resources: spec.podTemplate.spec.resources
    units: spec.replicas
  ui:
    editor:
      name: appcatalogappscodecom-appbinding-editor
      url: https://raw.githubusercontent.com/bytebuilders/ui-wizards/master/stable
      version: v0.2.0-alpha.0
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: AppBindingSpec is the spec for app
          properties:
            clientConfig:
              description: ClientConfig defines how to communicate with the app. Required
              properties:
                caBundle:
                  description: CABundle is a PEM encoded CA bundle which will be used to validate the serving certificate of this app.
                  format: byte
                  type: string
                insecureSkipTLSVerify:
                  description: InsecureSkipTLSVerify disables TLS certificate verification when communicating with this app. This is strongly discouraged.  You should use the CABundle instead.
                  type: boolean
                service:
                  description: "`service` is a reference to the service for this app. Either `service` or `url` must be specified. \n If the webhook is running within the cluster, then you should use `service`."
                  properties:
                    name:
                      description: '`name` is the name of the service. Required'
                      type: string
                    path:
                      description: '`path` is an optional URL path which will be sent in any request to this service.'
                      type: string
                    port:
                      description: The port that will be exposed by this app.
                      format: int32
                      type: integer
                    query:
                      description: '`query` is optional encoded query string, without ''?'' which will be sent in any request to this service.'
                      type: string
                    scheme:
                      description: 'Specifies which scheme to use, for example: http, https If specified, then it will applied as prefix in this format: scheme:// If not specified, then nothing will be prefixed'
                      type: string
                  required:
                  - name
                  - port
                  - scheme
                  type: object
                url:
                  description: "`url` gives the location of the app, in standard URL form (`[scheme://]host:port/path`). Exactly one of `url` or `service` must be specified. \n The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address. \n A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the app, for example, a cluster identifier. \n Attempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either."
                  type: string
              type: object
            parameters:
              description: "Parameters is a set of the parameters to be used to connect to the app. The inline YAML/JSON payload to be translated into equivalent JSON object. \n The Parameters field is NOT secret or secured in any way and should NEVER be used to hold sensitive information. To set parameters that contain secret information, you should ALWAYS store that information in a Secret."
              type: object
              x-kubernetes-embedded-resource: true
              x-kubernetes-preserve-unknown-fields: true
            secret:
              description: Secret is the name of the secret to create in the AppBinding's namespace that will hold the credentials associated with the AppBinding.
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            secretTransforms:
              description: List of transformations that should be applied to the credentials associated with the ServiceBinding before they are inserted into the Secret.
              items:
                description: 'SecretTransform is a single transformation that is applied to the credentials returned from the broker before they are inserted into the Secret associated with the ServiceBinding. Because different brokers providing the same type of service may each return a different credentials structure, users can specify the transformations that should be applied to the Secret to adapt its entries to whatever the service consumer expects. For example, the credentials returned by the broker may include the key "USERNAME", but the consumer requires the username to be exposed under the key "DB_USER" instead. To have the Service Catalog transform the Secret, the following SecretTransform must be specified in ServiceBinding.spec.secretTransform: - {"renameKey": {"from": "USERNAME", "to": "DB_USER"}} Only one of the SecretTransform''s members may be specified.'
                properties:
                  addKey:
                    description: AddKey represents a transform that adds an additional key to the credentials Secret
                    properties:
                      key:
                        description: The name of the key to add
                        type: string
                      stringValue:
                        description: The string (non-binary) value to add to the Secret under the specified key.
                        type: string
                      value:
                        description: The binary value (possibly non-string) to add to the Secret under the specified key. If both value and stringValue are specified, then value is ignored and stringValue is stored.
                        format: byte
                        type: string
                    required:
                    - key
                    type: object
                  addKeysFrom:
                    description: AddKeysFrom represents a transform that merges all the entries of an existing Secret into the credentials Secret
                    properties:
                      secretRef:
                        description: The reference to the Secret that should be merged into the credentials Secret.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                          namespace:
                            description: Namespace of the referent.
                            type: string
                        type: object
                    type: object
                  removeKey:
                    description: RemoveKey represents a transform that removes a credentials Secret entry
                    properties:
                      key:
                        description: The key to remove from the Secret
                        type: string
                    required:
                    - key
                    type: object
                  renameKey:
                    description: RenameKey represents a transform that renames a credentials Secret entry's key
                    properties:
                      from:
                        description: The name of the key to rename
                        type: string
                      to:
                        description: The new name for the key
                        type: string
                    required:
                    - from
                    - to
                    type: object
                type: object
              type: array
            type:
              description: Type used to facilitate programmatic handling of application.
              type: string
            version:
              description: Version used to facilitate programmatic handling of application.
              type: string
          required:
          - clientConfig
          type: object
      type: object
