apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: ""
    k8s.io/kind: Secret
    k8s.io/resource: secrets
    k8s.io/version: v1
  name: core-v1-secrets
spec:
  columns:
  - name: Name
    pathTemplate: '{{ jp "{.metadata.name}" . }}'
    priority: 3
    type: string
  - name: Namespace
    pathTemplate: '{{ jp "{.metadata.namespace}" . }}'
    priority: 3
    type: string
  - name: Labels
    pathTemplate: '{{ jp "{.metadata.labels}" . }}'
    priority: 3
    type: object
  - name: Annotations
    pathTemplate: '{{ jp "{.metadata.annotations}" . }}'
    priority: 3
    type: object
  - name: Type
    pathTemplate: '{{ jp "{.type}" . }}'
    priority: 3
    type: string
  - name: Data
    pathTemplate: '{{ jp "{.data}" .  | map_key_count }}'
    priority: 3
    type: string
  - name: Age
    pathTemplate: '{{ jp "{.metadata.creationTimestamp}" . }}'
    priority: 3
    type: date
  icons:
  - src: https://cdn.appscode.com/k8s/icons/core/secrets.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/core/secrets.png
    type: image/png
  pages:
  - name: Basic
    resources:
    - actions:
        create: Never
      displayMode: List
      ref:
        group: ""
        resource: pods
        version: v1
  resource:
    group: ""
    kind: Secret
    name: secrets
    scope: Namespaced
    version: v1
  ui:
    editor:
      name: core-secret-editor
      url: https://bundles.byte.builders/ui/
      version: v0.2.0
  validation:
    openAPIV3Schema:
      description: Secret holds secret data of a certain type. The total bytes of
        the values in the Data field must be less than MaxSecretSize bytes.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        data:
          additionalProperties:
            format: byte
            type: string
          description: Data contains the secret data. Each key must consist of alphanumeric
            characters, '-', '_' or '.'. The serialized form of the secret data is
            a base64 encoded string, representing the arbitrary (possibly non-string)
            data value here. Described in https://tools.ietf.org/html/rfc4648#section-4
          type: object
        immutable:
          description: Immutable, if set to true, ensures that data stored in the
            Secret cannot be updated (only object metadata can be modified). If not
            set to true, the field can be modified at any time. Defaulted to nil.
          type: boolean
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        stringData:
          additionalProperties:
            type: string
          description: stringData allows specifying non-binary secret data in string
            form. It is provided as a write-only input field for convenience. All
            keys and values are merged into the data field on write, overwriting any
            existing values. The stringData field is never output when reading from
            the API.
          type: object
        type:
          description: Used to facilitate programmatic handling of secret data.
          type: string
      type: object
