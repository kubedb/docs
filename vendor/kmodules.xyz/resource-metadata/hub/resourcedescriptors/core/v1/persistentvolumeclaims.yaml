apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: ""
    k8s.io/kind: PersistentVolumeClaim
    k8s.io/resource: persistentvolumeclaims
    k8s.io/version: v1
  name: core-v1-persistentvolumeclaims
spec:
  columns:
  - name: Name
    pathTemplate: '{{ jp "{.metadata.name}" . }}'
    priority: 3
    type: string
  - name: Namespace
    pathTemplate: '{{ jp "{.metadata.namespace}" . }}'
    priority: 3
    type: string
  - name: Labels
    pathTemplate: '{{ jp "{.metadata.labels}" . }}'
    priority: 3
    type: object
  - name: Annotations
    pathTemplate: '{{ jp "{.metadata.annotations}" . }}'
    priority: 3
    type: object
  - name: Status
    pathTemplate: '{{ jp "{.status.phase}" . }}'
    priority: 3
    type: string
  - name: Volume
    pathTemplate: '{{ jp "{.spec.volumeName}" . }}'
    priority: 3
    type: string
  - name: Capacity
    pathTemplate: '{{ jp "{.status.capacity.storage}" . }}'
    priority: 3
    type: string
  - name: Access Modes
    pathTemplate: '{{ jp "{.spec.accessModes}" . }}'
    priority: 3
    type: string
  - name: Storage Class
    pathTemplate: '{{ jp "{.spec.storageClassName}" . }}'
    priority: 3
    type: string
  - name: Age
    pathTemplate: '{{ jp "{.metadata.creationTimestamp}" . }}'
    priority: 3
    type: date
  icons:
  - src: https://cdn.appscode.com/k8s/icons/core/persistentvolumeclaims.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/core/persistentvolumeclaims.png
    type: image/png
  resource:
    group: ""
    kind: PersistentVolumeClaim
    name: persistentvolumeclaims
    scope: Namespaced
    version: v1
  resourceRequirements:
  - resources: spec.podTemplate.spec.resources
    units: spec.replicas
  ui:
    editor:
      name: core-persistentvolumeclaim-editor
      url: https://raw.githubusercontent.com/bytebuilders/ui-wizards/master/stable
      version: v0.2.0-alpha.0
  validation:
    openAPIV3Schema:
      description: PersistentVolumeClaim is a user's request for and claim to a persistent volume
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: 'Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
          properties:
            accessModes:
              description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
              items:
                type: string
              type: array
            dataSource:
              description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.'
              properties:
                apiGroup:
                  description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                  type: string
                kind:
                  description: Kind is the type of resource being referenced
                  type: string
                name:
                  description: Name is the name of resource being referenced
                  type: string
              required:
              - kind
              - name
              type: object
            resources:
              description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                  type: object
              type: object
            selector:
              description: A label query over volumes to consider for binding.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                  type: object
              type: object
            storageClassName:
              description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
              type: string
            volumeMode:
              description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
              type: string
            volumeName:
              description: VolumeName is the binding reference to the PersistentVolume backing this claim.
              type: string
          type: object
      type: object
