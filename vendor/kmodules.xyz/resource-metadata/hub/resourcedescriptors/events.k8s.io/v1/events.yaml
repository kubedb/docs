apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: events.k8s.io
    k8s.io/kind: Event
    k8s.io/resource: events
    k8s.io/version: v1
  name: events.k8s.io-v1-events
spec:
  icons:
  - src: https://cdn.appscode.com/k8s/icons/events.k8s.io/events.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/events.k8s.io/events.png
    type: image/png
  resource:
    group: events.k8s.io
    kind: Event
    name: events
    scope: Namespaced
    version: v1
  ui:
    editor:
      name: eventsk8sio-event-editor
      url: https://bundles.byte.builders/ui/
      version: v0.2.0
  validation:
    openAPIV3Schema:
      description: Event is a report of an event somewhere in the cluster. It generally
        denotes some state change in the system. Events have a limited retention time
        and triggers and messages may evolve with time.  Event consumers should not
        rely on the timing of an event with a given Reason reflecting a consistent
        underlying trigger, or the continued existence of events with that Reason.  Events
        should be treated as informative, best-effort, supplemental data.
      properties:
        action:
          description: action is what action was taken/failed regarding to the regarding
            object. It is machine-readable. This field cannot be empty for new Events
            and it can have at most 128 characters.
          type: string
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        deprecatedCount:
          description: deprecatedCount is the deprecated field assuring backward compatibility
            with core.v1 Event type.
          format: int32
          type: integer
        deprecatedFirstTimestamp:
          description: deprecatedFirstTimestamp is the deprecated field assuring backward
            compatibility with core.v1 Event type.
          format: date-time
          type: string
        deprecatedLastTimestamp:
          description: deprecatedLastTimestamp is the deprecated field assuring backward
            compatibility with core.v1 Event type.
          format: date-time
          type: string
        deprecatedSource:
          description: deprecatedSource is the deprecated field assuring backward
            compatibility with core.v1 Event type.
          properties:
            component:
              description: Component from which the event is generated.
              type: string
            host:
              description: Node name on which the event is generated.
              type: string
          type: object
        eventTime:
          description: eventTime is the time when this Event was first observed. It
            is required.
          format: date-time
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        note:
          description: note is a human-readable description of the status of this
            operation. Maximal length of the note is 1kB, but libraries should be
            prepared to handle values up to 64kB.
          type: string
        reason:
          description: reason is why the action was taken. It is human-readable. This
            field cannot be empty for new Events and it can have at most 128 characters.
          type: string
        regarding:
          description: regarding contains the object this Event is about. In most
            cases it's an Object reporting controller implements, e.g. ReplicaSetController
            implements ReplicaSets and this event is emitted because it acts on some
            changes in a ReplicaSet object.
          properties:
            apiVersion:
              description: API version of the referent.
              type: string
            fieldPath:
              description: 'If referring to a piece of an object instead of an entire
                object, this string should contain a valid JSON/Go field access statement,
                such as desiredState.manifest.containers[2]. For example, if the object
                reference is to a container within a pod, this would take on a value
                like: "spec.containers{name}" (where "name" refers to the name of
                the container that triggered the event) or if no container name is
                specified "spec.containers[2]" (container with index 2 in this pod).
                This syntax is chosen only to have some well-defined way of referencing
                a part of an object. TODO: this design is not final and this field
                is subject to change in the future.'
              type: string
            kind:
              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            name:
              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
              type: string
            namespace:
              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
              type: string
            resourceVersion:
              description: 'Specific resourceVersion to which this reference is made,
                if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
              type: string
            uid:
              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
              type: string
          type: object
        related:
          description: related is the optional secondary object for more complex actions.
            E.g. when regarding object triggers a creation or deletion of related
            object.
          properties:
            apiVersion:
              description: API version of the referent.
              type: string
            fieldPath:
              description: 'If referring to a piece of an object instead of an entire
                object, this string should contain a valid JSON/Go field access statement,
                such as desiredState.manifest.containers[2]. For example, if the object
                reference is to a container within a pod, this would take on a value
                like: "spec.containers{name}" (where "name" refers to the name of
                the container that triggered the event) or if no container name is
                specified "spec.containers[2]" (container with index 2 in this pod).
                This syntax is chosen only to have some well-defined way of referencing
                a part of an object. TODO: this design is not final and this field
                is subject to change in the future.'
              type: string
            kind:
              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            name:
              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
              type: string
            namespace:
              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
              type: string
            resourceVersion:
              description: 'Specific resourceVersion to which this reference is made,
                if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
              type: string
            uid:
              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
              type: string
          type: object
        reportingController:
          description: reportingController is the name of the controller that emitted
            this Event, e.g. `kubernetes.io/kubelet`. This field cannot be empty for
            new Events.
          type: string
        reportingInstance:
          description: reportingInstance is the ID of the controller instance, e.g.
            `kubelet-xyzf`. This field cannot be empty for new Events and it can have
            at most 128 characters.
          type: string
        series:
          description: series is data about the Event series this event represents
            or nil if it's a singleton Event.
          properties:
            count:
              description: count is the number of occurrences in this series up to
                the last heartbeat time.
              format: int32
              type: integer
            lastObservedTime:
              description: lastObservedTime is the time when last Event from the series
                was seen before last heartbeat.
              format: date-time
              type: string
          required:
          - count
          - lastObservedTime
          type: object
        type:
          description: type is the type of this event (Normal, Warning), new types
            could be added in the future. It is machine-readable. This field cannot
            be empty for new Events.
          type: string
      required:
      - eventTime
      type: object
