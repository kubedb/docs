apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: autoscaling
    k8s.io/kind: HorizontalPodAutoscaler
    k8s.io/resource: horizontalpodautoscalers
    k8s.io/version: v2beta2
  name: autoscaling-v2beta2-horizontalpodautoscalers
spec:
  columns:
  - name: Name
    pathTemplate: '{{ jp "{.metadata.name}" . }}'
    priority: 3
    type: string
  - name: Namespace
    pathTemplate: '{{ jp "{.metadata.namespace}" . }}'
    priority: 3
    type: string
  - name: Reference
    pathTemplate: '{{ jp "{.spec.scaleTargetRef.kind}/{.spec.scaleTargetRef.name}" . }}'
    priority: 3
    type: string
  - name: Min-Replica(s)
    pathTemplate: '{{ jp "{.spec.minReplicas}" . }}'
    priority: 3
    type: string
  - name: Max-Replica(s)
    pathTemplate: '{{ jp "{.spec.maxReplicas}" . }}'
    priority: 3
    type: string
  - name: Age
    pathTemplate: '{{ jp "{.metadata.creationTimestamp}" . }}'
    priority: 3
    type: date
  connections:
  - namespacePath: metadata.namespace
    references:
    - '{.spec.scaleTargetRef.name},{.metadata.namespace},{.spec.scaleTargetRef.kind},{.spec.scaleTargetRef.apiVersion}'
    target:
      apiVersion: apps/v1
      kind: Deployment
    type: MatchRef
  - namespacePath: metadata.namespace
    references:
    - '{.spec.scaleTargetRef.name},{.metadata.namespace},{.spec.scaleTargetRef.kind},{.spec.scaleTargetRef.apiVersion}'
    target:
      apiVersion: apps/v1
      kind: ReplicaSet
    type: MatchRef
  - namespacePath: metadata.namespace
    references:
    - '{.spec.scaleTargetRef.name},{.metadata.namespace},{.spec.scaleTargetRef.kind}'
    target:
      apiVersion: v1
      kind: ReplicationController
    type: MatchRef
  - namespacePath: metadata.namespace
    references:
    - '{.spec.scaleTargetRef.name},{.metadata.namespace},{.spec.scaleTargetRef.kind},{.spec.scaleTargetRef.apiVersion}'
    target:
      apiVersion: apps/v1
      kind: StatefulSet
    type: MatchRef
  icons:
  - src: https://cdn.appscode.com/k8s/icons/autoscaling/horizontalpodautoscalers.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/autoscaling/horizontalpodautoscalers.png
    type: image/png
  pages:
  - name: Basic
    resources:
    - actions:
        create: Never
      displayMode: List
      ref:
        group: apps
        resource: deployments
        version: v1
  resource:
    group: autoscaling
    kind: HorizontalPodAutoscaler
    name: horizontalpodautoscalers
    scope: Namespaced
    version: v2beta2
  resourceRequirements:
  - resources: spec.podTemplate.spec.resources
    units: spec.replicas
  ui:
    editor:
      name: autoscaling-horizontalpodautoscaler-editor
      url: https://raw.githubusercontent.com/bytebuilders/ui-wizards/master/stable
      version: v0.1.0
  validation:
    openAPIV3Schema:
      description: HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: 'spec is the specification for the behaviour of the autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'
          properties:
            behavior:
              description: behavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively). If not set, the default HPAScalingRules for scale up and scale down are used.
              properties:
                scaleDown:
                  description: scaleDown is scaling policy for scaling Down. If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e., the highest recommendation for the last 300sec is used).
                  properties:
                    policies:
                      description: policies is a list of potential scaling polices which can be used during scaling. At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
                      items:
                        description: HPAScalingPolicy is a single policy which must hold true for a specified past interval.
                        properties:
                          periodSeconds:
                            description: PeriodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
                            format: int32
                            type: integer
                          type:
                            description: Type is used to specify the scaling policy.
                            type: string
                          value:
                            description: Value contains the amount of change which is permitted by the policy. It must be greater than zero
                            format: int32
                            type: integer
                        required:
                        - periodSeconds
                        - type
                        - value
                        type: object
                      type: array
                    selectPolicy:
                      description: selectPolicy is used to specify which policy should be used. If not set, the default value MaxPolicySelect is used.
                      type: string
                    stabilizationWindowSeconds:
                      description: 'StabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down. StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour). If not set, use the default values: - For scale up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the stabilization window is 300 seconds long).'
                      format: int32
                      type: integer
                  type: object
                scaleUp:
                  description: 'scaleUp is scaling policy for scaling Up. If not set, the default value is the higher of:   * increase no more than 4 pods per 60 seconds   * double the number of pods per 60 seconds No stabilization is used.'
                  properties:
                    policies:
                      description: policies is a list of potential scaling polices which can be used during scaling. At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
                      items:
                        description: HPAScalingPolicy is a single policy which must hold true for a specified past interval.
                        properties:
                          periodSeconds:
                            description: PeriodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
                            format: int32
                            type: integer
                          type:
                            description: Type is used to specify the scaling policy.
                            type: string
                          value:
                            description: Value contains the amount of change which is permitted by the policy. It must be greater than zero
                            format: int32
                            type: integer
                        required:
                        - periodSeconds
                        - type
                        - value
                        type: object
                      type: array
                    selectPolicy:
                      description: selectPolicy is used to specify which policy should be used. If not set, the default value MaxPolicySelect is used.
                      type: string
                    stabilizationWindowSeconds:
                      description: 'StabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down. StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour). If not set, use the default values: - For scale up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the stabilization window is 300 seconds long).'
                      format: int32
                      type: integer
                  type: object
              type: object
            maxReplicas:
              description: maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.
              format: int32
              type: integer
            metrics:
              description: metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond. If not set, the default metric will be set to 80% average CPU utilization.
              items:
                description: MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).
                properties:
                  containerResource:
                    description: container resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source. This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag.
                    properties:
                      container:
                        description: container is the name of the container in the pods of the scaling target
                        type: string
                      name:
                        description: name is the name of the resource in question.
                        type: string
                      target:
                        description: target specifies the target value for the given metric
                        properties:
                          averageUtilization:
                            description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                            format: int32
                            type: integer
                          averageValue:
                            anyOf:
                            - type: integer
                            - type: string
                            description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type:
                            description: type represents whether the metric type is Utilization, Value, or AverageValue
                            type: string
                          value:
                            anyOf:
                            - type: integer
                            - type: string
                            description: value is the target value of the metric (as a quantity).
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        required:
                        - type
                        type: object
                    required:
                    - container
                    - name
                    - target
                    type: object
                  external:
                    description: external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
                    properties:
                      metric:
                        description: metric identifies the target metric by name and selector
                        properties:
                          name:
                            description: name is the name of the given metric
                            type: string
                          selector:
                            description: selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      target:
                        description: target specifies the target value for the given metric
                        properties:
                          averageUtilization:
                            description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                            format: int32
                            type: integer
                          averageValue:
                            anyOf:
                            - type: integer
                            - type: string
                            description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type:
                            description: type represents whether the metric type is Utilization, Value, or AverageValue
                            type: string
                          value:
                            anyOf:
                            - type: integer
                            - type: string
                            description: value is the target value of the metric (as a quantity).
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        required:
                        - type
                        type: object
                    required:
                    - metric
                    - target
                    type: object
                  object:
                    description: object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).
                    properties:
                      describedObject:
                        description: CrossVersionObjectReference contains enough information to let you identify the referred resource.
                        properties:
                          apiVersion:
                            description: API version of the referent
                            type: string
                          kind:
                            description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                            type: string
                          name:
                            description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      metric:
                        description: metric identifies the target metric by name and selector
                        properties:
                          name:
                            description: name is the name of the given metric
                            type: string
                          selector:
                            description: selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      target:
                        description: target specifies the target value for the given metric
                        properties:
                          averageUtilization:
                            description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                            format: int32
                            type: integer
                          averageValue:
                            anyOf:
                            - type: integer
                            - type: string
                            description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type:
                            description: type represents whether the metric type is Utilization, Value, or AverageValue
                            type: string
                          value:
                            anyOf:
                            - type: integer
                            - type: string
                            description: value is the target value of the metric (as a quantity).
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        required:
                        - type
                        type: object
                    required:
                    - describedObject
                    - metric
                    - target
                    type: object
                  pods:
                    description: pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.
                    properties:
                      metric:
                        description: metric identifies the target metric by name and selector
                        properties:
                          name:
                            description: name is the name of the given metric
                            type: string
                          selector:
                            description: selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      target:
                        description: target specifies the target value for the given metric
                        properties:
                          averageUtilization:
                            description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                            format: int32
                            type: integer
                          averageValue:
                            anyOf:
                            - type: integer
                            - type: string
                            description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type:
                            description: type represents whether the metric type is Utilization, Value, or AverageValue
                            type: string
                          value:
                            anyOf:
                            - type: integer
                            - type: string
                            description: value is the target value of the metric (as a quantity).
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        required:
                        - type
                        type: object
                    required:
                    - metric
                    - target
                    type: object
                  resource:
                    description: resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
                    properties:
                      name:
                        description: name is the name of the resource in question.
                        type: string
                      target:
                        description: target specifies the target value for the given metric
                        properties:
                          averageUtilization:
                            description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                            format: int32
                            type: integer
                          averageValue:
                            anyOf:
                            - type: integer
                            - type: string
                            description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type:
                            description: type represents whether the metric type is Utilization, Value, or AverageValue
                            type: string
                          value:
                            anyOf:
                            - type: integer
                            - type: string
                            description: value is the target value of the metric (as a quantity).
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        required:
                        - type
                        type: object
                    required:
                    - name
                    - target
                    type: object
                  type:
                    description: 'type is the type of metric source.  It should be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each mapping to a matching field in the object. Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled'
                    type: string
                required:
                - type
                type: object
              type: array
            minReplicas:
              description: minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
              format: int32
              type: integer
            scaleTargetRef:
              description: scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.
              properties:
                apiVersion:
                  description: API version of the referent
                  type: string
                kind:
                  description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                  type: string
                name:
                  description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                  type: string
              required:
              - kind
              - name
              type: object
          required:
          - maxReplicas
          - scaleTargetRef
          type: object
      type: object
